initSidebarItems({"constant":[["DATABASE_DIRECTORY",""]],"fn":[["get_data_dir","Creates and returns the SSMP database directory. Returns a `PathBuf` on success and a `std::io::Error` on failure."],["make_create_table_string","Takes in the name of a table to create and a vector of column info (used to define the contents of the table), and crafts a CREATE TABLE command string. The string is returned."],["make_database_path","Takes in a string (the name of a database, such as: \"abc.db\") and uses the `get_data_dir()` function to generate a full string path as to where on the machine the database will be stored."],["make_delete_string","Takes in the name of a table and a condition string and crafts a string representing a DELETE FROM sql command. The string is returned. Parameters:"],["make_drop_table_string","Takes in the name of a table and crafts a 'DROP TABLE' sql command. The command string is returned."],["make_insert_string","Takes in a table name and a vector of column information (taken from a schema, such as `MessageSchema` or `FriendSchema`) and crafts a SQL 'INSERT INTO' command string. The string is returned."],["make_select_string","Takes in the name of a table, a conditional string, and an array of column information (representing a schema's columns) and crafts a SELECT command string. Parameters:"]],"struct":[["LocalDatabase","Local DatabaseThe `LocalDatabase` struct serves as an interface between `rusqlite` and the SSMP client. Each `LocalDatabase` represents a different SQLite file."],["SQLColumnInfo","SQLColumnInfoThis struct wraps various values together, all representing a column in a SQL table. The values are:"]]});